[{"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/index.js":"1","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/App.js":"2","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/csrf.js":"3","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/session.js":"4","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/context/Modal.js":"5","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/index.js":"6","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/SignupFormPage/index.js":"7","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Navigation/index.js":"8","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Navigation/ProfileButton.js":"9","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LoginFormModal/index.js":"10","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LoginFormModal/LoginForm.js":"11","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LogoIcon/index.js":"12","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/SignUpButton/index.js":"13","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Dashboard/index.js":"14","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PublicHomePage/index.js":"15","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/WatchList/index.js":"16","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/watchlist.js":"17","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/assets.js":"18","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetsDisplay/index.js":"19","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetDetailsModal/AssetDetails.js":"20","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/loading.js":"21","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetsDisplaySplash/index.js":"22","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Footer/index.js":"23","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Web3Demo/index.js":"24","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/portfolio.js":"25","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AutoCompleteSearch/index.js":"26","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/index.js":"27","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/PortfolioTable/index.js":"28","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/BuySellModal/index.js":"29","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/BuySellModal/BuySellForm.js":"30","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPieChart/index.js":"31","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/BarChart/index.js":"32","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioBuySellModal/index.js":"33","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioBuySellModal/BuySellForm.js":"34"},{"size":959,"mtime":1611534292965,"results":"35","hashOfConfig":"36"},{"size":1864,"mtime":1614381319639,"results":"37","hashOfConfig":"36"},{"size":1523,"mtime":1611347630248,"results":"38","hashOfConfig":"36"},{"size":2215,"mtime":1613782016074,"results":"39","hashOfConfig":"36"},{"size":806,"mtime":1611358829189,"results":"40","hashOfConfig":"36"},{"size":956,"mtime":1613687798940,"results":"41","hashOfConfig":"36"},{"size":3660,"mtime":1612136323992,"results":"42","hashOfConfig":"36"},{"size":1561,"mtime":1614477333990,"results":"43","hashOfConfig":"36"},{"size":1197,"mtime":1612148562394,"results":"44","hashOfConfig":"36"},{"size":572,"mtime":1611741791895,"results":"45","hashOfConfig":"36"},{"size":2178,"mtime":1611990109106,"results":"46","hashOfConfig":"36"},{"size":364,"mtime":1611765123097,"results":"47","hashOfConfig":"36"},{"size":262,"mtime":1611539293642,"results":"48","hashOfConfig":"36"},{"size":2324,"mtime":1614545647844,"results":"49","hashOfConfig":"36"},{"size":1019,"mtime":1614478608150,"results":"50","hashOfConfig":"36"},{"size":1711,"mtime":1613685371858,"results":"51","hashOfConfig":"36"},{"size":3267,"mtime":1613683545256,"results":"52","hashOfConfig":"36"},{"size":1343,"mtime":1613579328615,"results":"53","hashOfConfig":"36"},{"size":5709,"mtime":1614336999082,"results":"54","hashOfConfig":"36"},{"size":1704,"mtime":1614397723687,"results":"55","hashOfConfig":"36"},{"size":2377,"mtime":1614321718728,"results":"56","hashOfConfig":"36"},{"size":4495,"mtime":1612136043486,"results":"57","hashOfConfig":"36"},{"size":2008,"mtime":1612148662713,"results":"58","hashOfConfig":"36"},{"size":4244,"mtime":1614381564795,"results":"59","hashOfConfig":"36"},{"size":4043,"mtime":1614332162162,"results":"60","hashOfConfig":"36"},{"size":2245,"mtime":1614338005540,"results":"61","hashOfConfig":"36"},{"size":2403,"mtime":1614550509157,"results":"62","hashOfConfig":"36"},{"size":6108,"mtime":1614550864494,"results":"63","hashOfConfig":"36"},{"size":660,"mtime":1614397736221,"results":"64","hashOfConfig":"36"},{"size":3109,"mtime":1614475193788,"results":"65","hashOfConfig":"36"},{"size":2649,"mtime":1614545651959,"results":"66","hashOfConfig":"36"},{"size":2855,"mtime":1614547831818,"results":"67","hashOfConfig":"36"},{"size":572,"mtime":1614550366234,"results":"68","hashOfConfig":"36"},{"size":3109,"mtime":1614550048197,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"52fkt7",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"72"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/index.js",[],["151","152"],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/App.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/csrf.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/session.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/context/Modal.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/SignupFormPage/index.js",["153"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport { ReactComponent as RocketSVG } from \"./rocket.svg\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [disabledButton, setDisabledButton] = useState(\"true\");\n\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  useEffect(() => {\n    setValidationErrors([]);\n    const errorsArr = validate();\n    setValidationErrors((prev) => [...prev, ...errorsArr]);\n    if (validationErrors.length === 0) {\n      setDisabledButton(false);\n    } else {\n      setDisabledButton(true);\n    }\n  }, [username, email, password]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n  const validate = () => {\n    const validationErrors = [];\n    // const emailPattern = /^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/;\n    // if (!emailPattern.test(email))\n    //   validationErrors.push(\"Enter a valid email address\");\n    if (!/[A-Z]+/.test(password))\n      validationErrors.push(\"One uppercase character\");\n    if (!/[a-z]+/.test(password))\n      validationErrors.push(\"One lowercase character\");\n    if (!/[0-9]+/.test(password)) validationErrors.push(\"One number\");\n    if (password.length < 8) validationErrors.push(\"8 characters minimum\");\n\n    return validationErrors;\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setValidationErrors([]);\n    return dispatch(sessionActions.signup({ email, username, password })).catch(\n      (res) => {\n        if (res.data && res.data.errors) setValidationErrors(res.data.errors);\n      }\n    );\n  };\n\n  return (\n    <div className=\"signup-page-container\">\n      <RocketSVG />\n      <form className=\"signup-form\" onSubmit={handleSubmit}>\n        <h2>\n          The fiat industrial era is about to rocket launch into the digital age\n        </h2>\n        <h5>\n          Sign up to follow my crypto portfolio and to explore my first solo\n          full stack web project postgre-express-redux-react learning project!\n        </h5>\n        <div>\n          <label for=\"signup-email\">Email</label>\n          <input\n            id=\"signup-email\"\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label for=\"signup-username\">Username</label>\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </div>\n        <div>\n          <label for=\"signup-password\">Password</label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <ul>\n          {validationErrors.map((err) => (\n            <li key={err}>{err}</li>\n          ))}\n        </ul>\n        <div className=\"signup-button-div\">\n          <button\n            value={disabledButton}\n            disabled={disabledButton}\n            type=\"submit\"\n          >\n            Sign Up\n          </button>\n          <p>\n            Create an account with the best none custodial crypto asset\n            portfolio tracker\n          </p>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default SignupFormPage;\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Navigation/index.js",["154"],"import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport ProfileButton from \"./ProfileButton\";\nimport SignUpButton from \"../SignUpButton\";\nimport LoginFormModal from \"../LoginFormModal\";\nimport LogoIcon from \"../LogoIcon\";\nimport AutoCompleteSearch from \"../AutoCompleteSearch\";\n\nimport \"./Navigation.css\";\n\nfunction Navigation({ isLoaded, setIsLoaded }) {\n  const sessionUser = useSelector((state) => state.session.user);\n  // const cashUSD = useSelector((state) => state.loading.portfoliometa.cashUSD);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <>\n        <div classname=\"profile-button-div\">\n          <ProfileButton user={sessionUser} setIsLoaded={setIsLoaded} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <nav className=\"navbar-top\">\n      <NavLink className=\"navbar-top-logo\" to=\"/\">\n        <LogoIcon loggedIn={!!sessionUser} />\n      </NavLink>\n      <NavLink to=\"/\">\n        <span className=\"project-name\">BlockchainLords</span>\n      </NavLink>\n      {sessionUser && (\n        <>\n          <div className=\"features-links\">\n            <NavLink to=\"/portfolio\">Portfolio</NavLink>\n            <NavLink to=\"/dashboard\">Dashboard</NavLink>\n          </div>\n        </>\n      )}\n      {!sessionUser && (\n        <>\n          <div className=\"features-links\"></div>\n          <LoginFormModal />\n          <SignUpButton />\n        </>\n      )}\n      <ul>\n        <li>{isLoaded && sessionLinks}</li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Navigation;\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Navigation/ProfileButton.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LoginFormModal/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LoginFormModal/LoginForm.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/LogoIcon/index.js",["155"],"import { ReactComponent as Logo } from \"./lord.svg\";\nimport LogoInverted from \"./lord-inverted.png\";\nimport \"./LogoIcon.css\";\n\nexport default function LogoIcon({ loggedIn }) {\n  if (loggedIn) {\n    //return <img src={LogoInverted} alt=\"\" className=\"LogoIcon\" />;\n    return <Logo className=\"LogoIcon\" />;\n  } else {\n    return <Logo className=\"LogoIcon\" />;\n  }\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/SignUpButton/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Dashboard/index.js",["156","157","158","159","160","161"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport WatchList from \"../WatchList\";\nimport AssetDetails from \"../AssetDetailsModal/AssetDetails.js\";\nimport AssetsDisplay from \"../AssetsDisplay\";\nimport PortfolioDisplay from \"../PortfolioPage\";\nimport { getPortfolio } from \"../../store/portfolio\";\nimport PortfolioPieChart from \"../PortfolioPieChart\";\n\nimport \"./Dashboard.css\";\n\nexport default function Dashboard() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const assets = useSelector((state) => state.assets);\n  const [assetDetailsData, setAssetDetailsData] = useState({\n    rank: 4,\n    logo: \"https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png\",\n    name: \"Polkadot\",\n    symbol: \"DOT\",\n    price: \"15.44\",\n    change7d: \"-6.96\",\n    change24h: \"-9.04\",\n    logo: \"https://s2.coinmarketcap.com/static/img/coins/64x64/6636.png\",\n    name: \"Polkadot\",\n    price: \"15.44\",\n    symbol: \"DOT\",\n  });\n\n  useEffect(() => {\n    dispatch(getPortfolio(sessionUser));\n  }, [dispatch]);\n\n  return (\n    <>\n      {assets && (\n        <div className=\"dashboard-container\">\n          <div className=\"dashboard-assetsdisplay-container\">\n            <h2>All Assets</h2>\n            <AssetsDisplay\n              setAssetDetailsData={setAssetDetailsData}\n              className=\"dashboard-assetsdisplay\"\n            />\n          </div>\n          <div className=\"dashboard-rightside-container\">\n            <div className=\"dashboard-portfolio\">\n              <h2>Portfolio</h2>\n              <PortfolioPieChart height={100} width={100} />\n            </div>\n            <div className=\"dashboard-watchlists\">\n              <h2>Watchlist</h2> <WatchList className=\"dashboard-watchlist\" />\n            </div>\n            <div className=\"dashboard-assetdetails-container\">\n              <AssetDetails asset={assets[assetDetailsData.rank]} />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n  //(\n  // <WatchList sessionUser={sessionUser} />\n  // <>\n  //   {sessionUser && (\n  //     <>\n  //       <h1>This is the dashboard</h1>\n  //       <p>sessionUser.id= {sessionUser.id}</p>\n  //       <p>sessionUser.username= {sessionUser.username}</p>\n  //     </>\n  //   )}\n  // </>\n  // );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PublicHomePage/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/WatchList/index.js",["162","163","164"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport cron from \"cron\";\n\nimport {\n  getWatchlist,\n  removeOneFromWatchlist,\n  getLiveWatchlistQuotes,\n} from \"../../store/watchlist\";\nimport \"./WatchList.css\";\n\nexport default function WatchList() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const assets = useSelector((state) => state.assets);\n  const watchlist = useSelector((state) => state.watchlist);\n  const watchlistId = useSelector((state) => state.loading.watchlistId);\n\n  useEffect(() => {\n    dispatch(getWatchlist(sessionUser));\n    //await dispatch(getLiveWatchlistQuotes(watchlistId, watchlist));\n    //\n    // const job = new cron.CronJob(\n    //   \"* * * * * *\",\n    //   function () {\n    //     console.log(\"You will see this message every second\");\n    //   },\n    //   null,\n    //   true,\n    //   \"America/Los_Angeles\"\n    // );\n    // job.start();\n  }, [dispatch, sessionUser]);\n\n  const handleremoveFromWatchlist = (assetId) => {\n    dispatch(removeOneFromWatchlist(watchlistId, assetId));\n  };\n\n  return (\n    <>\n      {watchlist && (\n        <ul>\n          {Object.values(watchlist).map((asset) => {\n            const quote = assets[asset.id].quote;\n\n            return (\n              <li>\n                <button\n                  className=\"redux-button\"\n                  onClick={() => handleremoveFromWatchlist(asset.id)}\n                >\n                  -{\" \"}\n                </button>\n                {\"  \"}\n                {asset.symbol} {quote.USD.price.toFixed(2)}\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/watchlist.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/assets.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetsDisplay/index.js",["165"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport AutoCompleteSearch from \"../AutoCompleteSearch\";\nimport { CronJob } from \"cron\";\n\nimport { getAssetsLiveQuotes } from \"../../store/assets\";\nimport \"./AssetsDisplay.css\";\n\nconst columns = [\n  { id: \"rank\", label: \"#\", minWidth: 5 },\n  { id: \"logo\", label: \"Logo\", minWidth: 5 },\n  { id: \"symbol\", label: \"Symbol\", minWidth: 15 },\n  { id: \"name\", label: \"Name\", align: \"left\", minWidth: 15 },\n  { id: \"price\", label: \"Price\", minWidth: 15 },\n  { id: \"change24h\", label: \"24h\", minWidth: 15 },\n  { id: \"change7d\", label: \"7d\", minWidth: 15 },\n];\n\nfunction createData(rank, logo, symbol, name, price, change24h, change7d) {\n  return { rank, logo, name, symbol, price, change24h, change7d };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n    fontSize: 5,\n  },\n});\n\nexport default function AssetsDisplay({ setAssetDetailsData }) {\n  const dispatch = useDispatch();\n  const assets = useSelector((state) => state.assets);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  useEffect(() => {\n    //await dispatch(getAssetsLiveQuotes(assets));\n  }, [dispatch]);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  //Handle row click and load assetDetails Display one layer up\n  const handleRowClick = (row) => {\n    setAssetDetailsData(row);\n  };\n  const handleUpdateClick = () => {\n    dispatch(getAssetsLiveQuotes(assets));\n  };\n  const handleAutoDataClick = () => {\n    // const job = new CronJob(\n    //   \"* * * * * *\",\n    //   function () {\n    //     console.log(\"You will see this message every second\");\n    //   },\n    //   null,\n    //   true,\n    //   \"America/Los_Angeles\"\n    // );\n    // job.start();\n    setInterval(() => dispatch(getAssetsLiveQuotes(assets)), 61000);\n  };\n  let assetsArr;\n\n  assetsArr = Object.values(assets);\n  const classes = useStyles();\n  const rows = assetsArr.map((asset) => {\n    return createData(\n      asset.id,\n      asset.assetDetails.logo,\n      asset.symbol,\n      asset.name,\n      asset.quote.USD.price.toFixed(2),\n      asset.quote.USD.percent_change_24h.toFixed(2),\n      asset.quote.USD.percent_change_7d.toFixed(2)\n    );\n  });\n\n  return (\n    <Paper className={classes.root}>\n      <div className=\"asset-display-buttons-container\">\n        <button className=\"redux-button\" onClick={handleUpdateClick}>\n          Update Data\n        </button>\n        <button className=\"redux-button\" onClick={handleAutoDataClick}>\n          Auto Update\n        </button>\n        <AutoCompleteSearch setAssetDetailsData={setAssetDetailsData} />\n      </div>\n      <TableContainer className={classes.container}>\n        <Table aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow\n                    onClick={(e) => handleRowClick(row)}\n                    hover\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                    key={row.code}\n                  >\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      if (column.id !== \"logo\") {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {value}\n                          </TableCell>\n                        );\n                      } else {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            <img\n                              className=\"logo-img\"\n                              alt=\"logo\"\n                              src={value}\n                            ></img>\n                          </TableCell>\n                        );\n                      }\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n// {assetsArr.map((asset) => {\n//   return (\n//     <tr>\n//       <td>\n//         <img src={asset.assetDetails.logo}></img>\n//       </td>\n//       <td>{asset.symbol}</td>\n//       <td>${asset.quote.USD.price.toFixed(2)}</td>\n//     </tr>\n//   );\n// })}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetDetailsModal/AssetDetails.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/loading.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AssetsDisplaySplash/index.js",["166","167"],"import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport \"./AssetsDisplaySplash.css\";\n\nconst columns = [\n  { id: \"rank\", label: \"#\", minWidth: 5 },\n  { id: \"logo\", label: \"Logo\", minWidth: 5 },\n  { id: \"symbol\", label: \"Symbol\", minWidth: 15 },\n  { id: \"name\", label: \"Name\", align: \"left\", minWidth: 15 },\n  { id: \"price\", label: \"Price\", minWidth: 15 },\n  { id: \"change24h\", label: \"24h\", minWidth: 15 },\n  { id: \"change7d\", label: \"7d\", minWidth: 15 },\n];\n\nfunction createData(rank, logo, symbol, name, price, change24h, change7d) {\n  return { rank, logo, name, symbol, price, change24h, change7d };\n}\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n  },\n  container: {\n    maxHeight: 440,\n    fontSize: 5,\n  },\n});\n\nexport default function AssetsDisplay({ setAssetDetailsData }) {\n  const dispatch = useDispatch();\n  const assets = useSelector((state) => state.assets);\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  let assetsArr;\n  // useEffect(() => {\n  //   assetsArr = Object.values(assets);\n  //   console.log(assetsArr);\n  // }, [assets]);\n  assetsArr = Object.values(assets);\n  const classes = useStyles();\n  const rows = assetsArr.map((asset) => {\n    return createData(\n      asset.id,\n      asset.assetDetails.logo,\n      asset.symbol,\n      asset.name,\n      asset.quote.USD.price.toFixed(2),\n      asset.quote.USD.percent_change_24h.toFixed(2),\n      asset.quote.USD.percent_change_7d.toFixed(2)\n    );\n  });\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      if (column.id !== \"logo\") {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            {value}\n                          </TableCell>\n                        );\n                      } else {\n                        return (\n                          <TableCell key={column.id} align={column.align}>\n                            <img\n                              className=\"logo-img\"\n                              alt=\"logo\"\n                              src={value}\n                            ></img>\n                          </TableCell>\n                        );\n                      }\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\n// {assetsArr.map((asset) => {\n//   return (\n//     <tr>\n//       <td>\n//         <img src={asset.assetDetails.logo}></img>\n//       </td>\n//       <td>{asset.symbol}</td>\n//       <td>${asset.quote.USD.price.toFixed(2)}</td>\n//     </tr>\n//   );\n// })}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Footer/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/Web3Demo/index.js",["168","169"],"import React, { useEffect, useState } from \"react\";\nimport Web3DemoABI from \"./Web3Demo.json\";\nimport styled from \"styled-components\";\nimport Web3 from \"web3\";\n\n// export const MoblieButton = styled.div`\n//   margin-top: 25px;\n\n//   padding-top: 10px;\n//   padding-bottom: 10px;\n\n//   font-size: 20px;\n//   text-align: center;\n//   width: 15%;\n//   height: 20px;\n//   border-radius: 10px;\n//   border: 2px #6685ff solid;\n//   font-family: sans-serif;\n//   color: #0a3cff;\n//   background-color: #a8baff;\n//   box-shadow: 1px 2px;\n// `;\n\n// export const TextArea = styled.input`\n//   margin-bottom: 0px;\n//   font-size: 22px;\n//   width: 47%;\n//   text-align: center;\n\n//   border-radius: 42px;\n//   border: 2px #6685ff solid;\n//   padding-top: 5px;\n//   padding-bottom: 5px;\n//   padding-left: 10px;\n//   :focus {\n//     outline: 0;\n//     box-shadow: 0 0 10px blue;\n//   }\n// `;\n\nconst Web3DemoContractAddress = \"0xb7D8cba348ef05cF4B888f7976A4FE7744fa3dc0\";\nexport default function Web3Demo() {\n  const [walletAmount, setWalletAmount] = useState(0);\n  const [newWord, setNewWord] = useState(\"Enter\");\n  const [currentWord, setCurrentWord] = useState(\"\");\n\n  async function getWalletAmount() {\n    async function loadWeb3() {\n      if (window.ethereum) {\n        window.web3 = new Web3(window.ethereum);\n        await window.ethereum.enable();\n        return true;\n      } else if (window.web3) {\n        window.web3 = new Web3(window.web3.currentProvider);\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    let wallet = await loadWeb3();\n    console.log(wallet);\n\n    if (wallet) {\n      const web3 = window.web3;\n\n      const accounts = await window.web3.eth.getAccounts();\n      const address = { account: accounts[0] }.account;\n      if (address) {\n        web3.eth.getBalance(address, function (error, wei) {\n          if (!error) {\n            let balance = web3.utils.fromWei(wei, \"ether\");\n            console.log(balance);\n            setWalletAmount(balance.substring(0, 4));\n          }\n        });\n      }\n    } else {\n      return <h1>Get metamask, newb!</h1>;\n    }\n  }\n  async function postStringToSmartContract() {\n    const web3 = window.web3;\n    const ETHAccounts = await web3.eth.getAccounts();\n    const DemoContract = new web3.eth.Contract(\n      Web3DemoABI.abi,\n      Web3DemoContractAddress\n    );\n\n    await DemoContract.methods\n      .Change_Word(currentWord)\n      .send({ from: ETHAccounts[0], value: 0 })\n      .once(\"receipt\", (receipt) => {\n        console.log(receipt);\n        console.log(\"transaction hash\" + receipt.transactionHash);\n      });\n  }\n  async function Read_Word() {\n    const web3 = window.web3;\n    const Ethaccounts = await web3.eth.getAccounts();\n    const HelloContract = new web3.eth.Contract(\n      Web3DemoABI.abi,\n      Web3DemoContractAddress\n    );\n\n    await HelloContract.methods.read_word().call(function (error, result) {\n      console.log(result);\n      setNewWord(result);\n    });\n  }\n\n  useEffect(() => {\n    getWalletAmount();\n  }, []);\n  return (\n    <>\n      {walletAmount && (\n        <>\n          <h2>\n            Web3 Blockchain/ETH Smart Contract Demo{\" \"}\n            <a href=\"https://github.com/Klongrich/HelloWorld_Dapp_Example\">\n              Special thanks to Klongrich's github\n            </a>\n          </h2>\n          <h2>Total Amount: {walletAmount} ETH</h2>\n          <h2>Enter Word:</h2>\n          <textarea\n            class=\"web3textarea\"\n            type=\"text\"\n            value={currentWord}\n            onChange={(e) => setCurrentWord(e.target.value)}\n          ></textarea>\n\n          <button onClick={() => postStringToSmartContract()}>\n            Post to SmartContract\n          </button>\n          <button onClick={() => Read_Word()}>Read SmartContract</button>\n\n          <h2>Current Word:</h2>\n          <p>{newWord}</p>\n        </>\n      )}\n      {walletAmount === 0 && (\n        <>\n          <h2>\n            Get metamask now, go to{\" \"}\n            <a href=\"https://faucet.ropsten.be/\">this faucet </a>\n            or\n            <a href=\"https://faucet.metamask.io/\"> this faucet </a>\n            to get your testnet ETH please and join the blockchain revolution\n          </h2>\n        </>\n      )}\n    </>\n  );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/store/portfolio.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/AutoCompleteSearch/index.js",["170","171","172"],"import React, { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport \"./AutoCompleteSearch.css\";\nimport { setAssetDetailsData } from \"../Dashboard\";\nimport { set } from \"js-cookie\";\n\nfunction AutoComplete({ setAssetDetailsData }) {\n  const [inputVal, setInputVal] = useState(\"\");\n  const assets = useSelector((state) => state.assets);\n  const id_name_symbol_arr = [];\n  const names = [];\n  for (let key in assets) {\n    names.push([key, assets[key].name + \" \" + assets[key].symbol]);\n  }\n\n  const a = (e) => {\n    setInputVal(e.target.value);\n  };\n  const handleEnter = (e) => {\n    if (e.key === \"Enter\") {\n      console.log(e);\n    }\n  };\n\n  const selectName = (e) => {\n    const name = e.target.innerText;\n    setInputVal(name);\n    if (e.target.attributes.rank) {\n      const rank = e.target.attributes.rank.nodeValue;\n      const asset = assets[rank];\n      const assetDetailsObj = { rank: asset.id };\n      setAssetDetailsData(assetDetailsObj);\n    }\n    setInputVal(\"\");\n  };\n\n  const matches = () => {\n    const inputLength = inputVal.length;\n    const matches = [];\n\n    if (inputLength === 0) return [];\n\n    names.forEach((name) => {\n      //   const nameSegment = name.slice(0, inputLength);\n      //   if (nameSegment.toLowerCase() === inputVal.toLowerCase()) {\n      //     matches.push(name);\n      //   }\n      if (name[1].toLowerCase().includes(inputVal.toLowerCase())) {\n        matches.push(name);\n      }\n    });\n\n    if (matches.length === 0) matches.push(\"No matches\");\n\n    return matches;\n  };\n  const results = matches().map((result) => (\n    <CSSTransition\n      key={result[1]}\n      rank={result[0]}\n      classNames=\"result\"\n      timeout={{ enter: 500, exit: 300 }}\n    >\n      <li>{result[1]}</li>\n    </CSSTransition>\n  ));\n\n  return (\n    <section>\n      <div className=\"auto\">\n        <input\n          onChange={a}\n          onKeyPress={handleEnter}\n          value={inputVal}\n          placeholder=\"Search...\"\n        />\n        <ul className=\"auto-dropdown\" onClick={selectName}>\n          <TransitionGroup>{results}</TransitionGroup>\n        </ul>\n      </div>\n    </section>\n  );\n}\n\nexport default AutoComplete;\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/index.js",["173","174","175"],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/PortfolioTable/index.js",["176","177","178","179"],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/BuySellModal/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/BuySellModal/BuySellForm.js",["180","181","182"],"import { useDispatch, useSelector } from \"react-redux\";\nimport { useState, useEffect } from \"react\";\nimport {\n  getPortfolio,\n  sellPortfolioAsset,\n  buyPortfolioAsset,\n} from \"../../store/portfolio\";\n\nexport default function BuySellForm({ asset, setShowModal }) {\n  const dispatch = useDispatch();\n  const portfolio = useSelector((state) => state.portfolio);\n  const sessionUser = useSelector((state) => state.session.user);\n  const portfoliometa = useSelector((state) => state.loading.portfoliometa);\n  const assetPrice = asset.quote.USD.price;\n  const quantityOfAsset = portfolio[asset.id]\n    ? portfolio[asset.id].quantityOfAsset\n    : 0;\n\n  const [assetAmount, setAssetAmount] = useState(0);\n  const [usdAmount, setUSDAmount] = useState(0);\n\n  const [validationErrors, setValidationErrors] = useState([]);\n\n  useEffect(() => {\n    setValidationErrors([]);\n    setUSDAmount(assetAmount * assetPrice);\n  }, [assetAmount, usdAmount]);\n\n  const handleBuyAsset = async () => {\n    if (assetAmount === 0) {\n      return;\n    }\n    if (usdAmount > portfoliometa.cashUSD) {\n      alert(\"you dont have enough USD to make this purchase\");\n      return;\n    }\n    await dispatch(\n      buyPortfolioAsset(\n        sessionUser,\n        assetAmount,\n        assetPrice,\n        portfoliometa.id,\n        asset.id\n      )\n    );\n  };\n  const handleSellAsset = async () => {\n    if (quantityOfAsset === 0) {\n      alert(\"You dont own any \" + asset.symbol);\n      return;\n    }\n    if (assetAmount === 0) {\n      alert(\"You can not sell zero \" + asset.symbol);\n      return;\n    }\n    if (assetAmount > quantityOfAsset) {\n      setAssetAmount(quantityOfAsset);\n    }\n    await dispatch(\n      sellPortfolioAsset(\n        sessionUser,\n        assetAmount,\n        assetPrice,\n        portfoliometa.id,\n        asset.id\n      )\n    );\n  };\n  const handleSellMax = () => {\n    setAssetAmount(quantityOfAsset);\n  };\n  return (\n    <div className=\"buysell-div\">\n      <h3>{asset.symbol} - USD</h3>\n      <div className=\"buysell-header\">\n        <ul>\n          <li>USD Balance: {portfoliometa.cashUSD.toFixed(2)} </li>\n          <li>\n            {asset.symbol} Balance:{\" \"}\n            {portfolio[asset.id] && portfolio[asset.id].quantityOfAsset}\n          </li>\n          <li>\n            Quote ${assetPrice.toFixed(2)}/{asset.symbol}\n          </li>\n        </ul>\n      </div>\n      <div>\n        <div>\n          <label>asset-amount</label>\n          <input\n            type=\"asset-amount\"\n            value={assetAmount}\n            onChange={(e) => setAssetAmount(e.target.value)}\n          ></input>\n        </div>\n        <button onClick={handleBuyAsset}>Buy</button>\n        <button onClick={handleSellAsset}>Sell</button>\n        <button onClick={handleSellMax}>Sell Max</button>\n      </div>\n      <div>\n        <div>\n          <label>usd-amount</label>\n          <input\n            type=\"usd-amount\"\n            value={usdAmount}\n            onChange={(e) => setUSDAmount(e.target.value)}\n          ></input>\n        </div>\n\n        <button>Buy</button>\n        <button>Sell</button>\n      </div>\n    </div>\n  );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPieChart/index.js",["183","184"],"import React from \"react\";\nimport { Pie } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\n\nconst exampledata = {\n  labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  datasets: [\n    {\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n        \"rgba(255, 159, 64, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n        \"rgba(255, 159, 64, 1)\",\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\nconst backgroundColors = [\n  \"rgba(119, 212, 137, 0.2)\",\n  \"rgba(255, 99, 132, 0.2)\",\n  \"rgba(54, 162, 235, 0.2)\",\n  \"rgba(255, 206, 86, 0.2)\",\n  \"rgba(75, 192, 192, 0.2)\",\n  \"rgba(153, 102, 255, 0.2)\",\n  \"rgba(255, 159, 64, 0.2)\",\n  \"rgba(171, 183, 201, 0.2)\",\n  \"rgba(178, 201, 171, 0.2)\",\n  \"rgba(224, 129, 105, 0.2)\",\n  \"rgba(172, 160, 219, 0.2)\",\n];\nconst borderColors = [\n  \"rgba(119, 212, 137, 0.2)\",\n  \"rgba(255, 99, 132, 1)\",\n  \"rgba(54, 162, 235, 1)\",\n  \"rgba(255, 206, 86, 1)\",\n  \"rgba(75, 192, 192, 1)\",\n  \"rgba(153, 102, 255, 1)\",\n  \"rgba(255, 159, 64, 1)\",\n  \"rgba(171, 183, 201, 1)\",\n  \"rgba(178, 201, 171, 1)\",\n  \"rgba(224, 129, 105, 1)\",\n  \"rgba(172, 160, 219, 1)\",\n];\n\nexport default function PortfolioPieChart({ height, width }) {\n  const portfolio = useSelector((state) => state.portfolio);\n  const portfoliometa = useSelector((state) => state.loading.portfoliometa);\n  const assets = useSelector((state) => state.assets);\n\n  const labels = Object.values(portfolio).map((asset) => {\n    return assets[asset.id].symbol;\n  });\n  const assetsUSDPriceArr = Object.values(portfolio).map((asset) => {\n    const currentPrice = assets[asset.id].quote.USD.price;\n    const amount = asset.quantityOfAsset;\n    const ret = (currentPrice * amount).toFixed(0);\n    return ret;\n  });\n  const length = labels.length;\n  const backgroundColor = backgroundColors.slice(0, length);\n  const borderColor = borderColors.slice(0, length);\n\n  const data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"Amount owned in USD\",\n        data: assetsUSDPriceArr,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <>\n      <Pie\n        data={data}\n        width={width}\n        height={height}\n        options={{ maintainAspectRatio: false }}\n      />\n    </>\n  );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioPage/BarChart/index.js",["185","186"],"import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\n\nconst data = {\n  labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\n  datasets: [\n    {\n      label: \"# of Votes\",\n      data: [12, 19, 3, 5, 2, 3],\n      backgroundColor: [\n        \"rgba(255, 99, 132, 0.2)\",\n        \"rgba(54, 162, 235, 0.2)\",\n        \"rgba(255, 206, 86, 0.2)\",\n        \"rgba(75, 192, 192, 0.2)\",\n        \"rgba(153, 102, 255, 0.2)\",\n        \"rgba(255, 159, 64, 0.2)\",\n      ],\n      borderColor: [\n        \"rgba(255, 99, 132, 1)\",\n        \"rgba(54, 162, 235, 1)\",\n        \"rgba(255, 206, 86, 1)\",\n        \"rgba(75, 192, 192, 1)\",\n        \"rgba(153, 102, 255, 1)\",\n        \"rgba(255, 159, 64, 1)\",\n      ],\n      borderWidth: 1,\n    },\n  ],\n};\nconst backgroundColors = [\n  \"rgba(119, 212, 137, 0.2)\",\n  \"rgba(255, 99, 132, 0.2)\",\n  \"rgba(54, 162, 235, 0.2)\",\n  \"rgba(255, 206, 86, 0.2)\",\n  \"rgba(75, 192, 192, 0.2)\",\n  \"rgba(153, 102, 255, 0.2)\",\n  \"rgba(255, 159, 64, 0.2)\",\n  \"rgba(171, 183, 201, 0.2)\",\n  \"rgba(178, 201, 171, 0.2)\",\n  \"rgba(224, 129, 105, 0.2)\",\n  \"rgba(172, 160, 219, 0.2)\",\n];\nconst borderColors = [\n  \"rgba(119, 212, 137, 0.2)\",\n  \"rgba(255, 99, 132, 1)\",\n  \"rgba(54, 162, 235, 1)\",\n  \"rgba(255, 206, 86, 1)\",\n  \"rgba(75, 192, 192, 1)\",\n  \"rgba(153, 102, 255, 1)\",\n  \"rgba(255, 159, 64, 1)\",\n  \"rgba(171, 183, 201, 1)\",\n  \"rgba(178, 201, 171, 1)\",\n  \"rgba(224, 129, 105, 1)\",\n  \"rgba(172, 160, 219, 1)\",\n];\n\nconst options = {\n  maintainAspectRatio: false,\n  scales: {\n    yAxes: [\n      {\n        ticks: {\n          beginAtZero: true,\n        },\n      },\n    ],\n  },\n};\n\nexport default function BarChart({ height, width }) {\n  const portfolio = useSelector((state) => state.portfolio);\n  const assets = useSelector((state) => state.assets);\n  const labels = Object.values(portfolio).map((asset) => {\n    return assets[asset.id].symbol;\n  });\n  const transaction_counts = Object.values(portfolio).map((asset) => {\n    return asset.history.length;\n  });\n  const length = labels.length;\n  const backgroundColor = backgroundColors.slice(0, length);\n  const borderColor = borderColors.slice(0, length);\n  const history_data = {\n    labels: labels,\n    datasets: [\n      {\n        label: \"# of trades\",\n        data: transaction_counts,\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: 1,\n      },\n    ],\n  };\n  const options = {\n    maintainAspectRatio: false,\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <div className=\"header\">\n        <h5 className=\"title\">Number of Transactions</h5>\n      </div>\n      <Bar\n        data={history_data}\n        width={width}\n        height={height}\n        options={options}\n      />\n    </>\n  );\n}\n","/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioBuySellModal/index.js",[],"/Users/tommynchen/Downloads/aA-TheBlockchainLord/frontend/src/components/PortfolioBuySellModal/BuySellForm.js",["187","188","189"],{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":28,"column":6,"nodeType":"196","endLine":28,"endColumn":33,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":8,"column":8,"nodeType":"200","messageId":"201","endLine":8,"endColumn":26},{"ruleId":"198","severity":1,"message":"202","line":2,"column":8,"nodeType":"200","messageId":"201","endLine":2,"endColumn":20},{"ruleId":"198","severity":1,"message":"203","line":6,"column":8,"nodeType":"200","messageId":"201","endLine":6,"endColumn":24},{"ruleId":"204","severity":1,"message":"205","line":24,"column":5,"nodeType":"206","messageId":"207","endLine":24,"endColumn":9},{"ruleId":"204","severity":1,"message":"208","line":25,"column":5,"nodeType":"206","messageId":"207","endLine":25,"endColumn":9},{"ruleId":"204","severity":1,"message":"209","line":26,"column":5,"nodeType":"206","messageId":"207","endLine":26,"endColumn":10},{"ruleId":"204","severity":1,"message":"210","line":27,"column":5,"nodeType":"206","messageId":"207","endLine":27,"endColumn":11},{"ruleId":"194","severity":1,"message":"211","line":32,"column":6,"nodeType":"196","endLine":32,"endColumn":16,"suggestions":"212"},{"ruleId":"198","severity":1,"message":"213","line":1,"column":28,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"214","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":12},{"ruleId":"198","severity":1,"message":"215","line":8,"column":3,"nodeType":"200","messageId":"201","endLine":8,"endColumn":25},{"ruleId":"198","severity":1,"message":"216","line":13,"column":10,"nodeType":"200","messageId":"201","endLine":13,"endColumn":17},{"ruleId":"198","severity":1,"message":"217","line":1,"column":27,"nodeType":"200","messageId":"201","endLine":1,"endColumn":36},{"ruleId":"198","severity":1,"message":"218","line":40,"column":9,"nodeType":"200","messageId":"201","endLine":40,"endColumn":17},{"ruleId":"198","severity":1,"message":"219","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":14},{"ruleId":"198","severity":1,"message":"220","line":100,"column":11,"nodeType":"200","messageId":"201","endLine":100,"endColumn":22},{"ruleId":"198","severity":1,"message":"221","line":5,"column":10,"nodeType":"200","messageId":"201","endLine":5,"endColumn":29},{"ruleId":"198","severity":1,"message":"222","line":6,"column":10,"nodeType":"200","messageId":"201","endLine":6,"endColumn":13},{"ruleId":"198","severity":1,"message":"223","line":11,"column":9,"nodeType":"200","messageId":"201","endLine":11,"endColumn":27},{"ruleId":"198","severity":1,"message":"224","line":15,"column":10,"nodeType":"200","messageId":"201","endLine":15,"endColumn":20},{"ruleId":"198","severity":1,"message":"225","line":15,"column":22,"nodeType":"200","messageId":"201","endLine":15,"endColumn":35},{"ruleId":"194","severity":1,"message":"211","line":19,"column":6,"nodeType":"196","endLine":19,"endColumn":16,"suggestions":"226"},{"ruleId":"198","severity":1,"message":"217","line":1,"column":17,"nodeType":"200","messageId":"201","endLine":1,"endColumn":26},{"ruleId":"198","severity":1,"message":"227","line":3,"column":8,"nodeType":"200","messageId":"201","endLine":3,"endColumn":17},{"ruleId":"198","severity":1,"message":"228","line":18,"column":8,"nodeType":"200","messageId":"201","endLine":18,"endColumn":29},{"ruleId":"198","severity":1,"message":"218","line":140,"column":9,"nodeType":"200","messageId":"201","endLine":140,"endColumn":17},{"ruleId":"198","severity":1,"message":"229","line":4,"column":3,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"198","severity":1,"message":"230","line":22,"column":10,"nodeType":"200","messageId":"201","endLine":22,"endColumn":26},{"ruleId":"194","severity":1,"message":"231","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":30,"suggestions":"232"},{"ruleId":"198","severity":1,"message":"233","line":5,"column":7,"nodeType":"200","messageId":"201","endLine":5,"endColumn":18},{"ruleId":"198","severity":1,"message":"234","line":60,"column":9,"nodeType":"200","messageId":"201","endLine":60,"endColumn":22},{"ruleId":"198","severity":1,"message":"235","line":5,"column":7,"nodeType":"200","messageId":"201","endLine":5,"endColumn":11},{"ruleId":"198","severity":1,"message":"236","line":58,"column":7,"nodeType":"200","messageId":"201","endLine":58,"endColumn":14},{"ruleId":"198","severity":1,"message":"229","line":4,"column":3,"nodeType":"200","messageId":"201","endLine":4,"endColumn":15},{"ruleId":"198","severity":1,"message":"230","line":22,"column":10,"nodeType":"200","messageId":"201","endLine":22,"endColumn":26},{"ruleId":"194","severity":1,"message":"231","line":27,"column":6,"nodeType":"196","endLine":27,"endColumn":30,"suggestions":"237"},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'validate' and 'validationErrors.length'. Either include them or remove the dependency array.","ArrayExpression",["240"],"no-unused-vars","'AutoCompleteSearch' is defined but never used.","Identifier","unusedVar","'LogoInverted' is defined but never used.","'PortfolioDisplay' is defined but never used.","no-dupe-keys","Duplicate key 'logo'.","ObjectExpression","unexpected","Duplicate key 'name'.","Duplicate key 'price'.","Duplicate key 'symbol'.","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.",["241"],"'useState' is defined but never used.","'cron' is defined but never used.","'getLiveWatchlistQuotes' is defined but never used.","'CronJob' is defined but never used.","'useEffect' is defined but never used.","'dispatch' is assigned a value but never used.","'styled' is defined but never used.","'Ethaccounts' is assigned a value but never used.","'setAssetDetailsData' is defined but never used.","'set' is defined but never used.","'id_name_symbol_arr' is assigned a value but never used.","'totalWorth' is assigned a value but never used.","'setTotalWorth' is assigned a value but never used.",["242"],"'PropTypes' is defined but never used.","'PortfolioBuySellModal' is defined but never used.","'getPortfolio' is defined but never used.","'validationErrors' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'assetPrice'. Either include it or remove the dependency array.",["243"],"'exampledata' is assigned a value but never used.","'portfoliometa' is assigned a value but never used.","'data' is assigned a value but never used.","'options' is assigned a value but never used.",["244"],"no-global-assign","no-unsafe-negation",{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"247","fix":"249"},{"desc":"250","fix":"251"},{"desc":"250","fix":"252"},"Update the dependencies array to be: [username, email, password, validate, validationErrors.length]",{"range":"253","text":"254"},"Update the dependencies array to be: [dispatch, sessionUser]",{"range":"255","text":"256"},{"range":"257","text":"256"},"Update the dependencies array to be: [assetAmount, assetPrice, usdAmount]",{"range":"258","text":"259"},{"range":"260","text":"259"},[964,991],"[username, email, password, validate, validationErrors.length]",[1099,1109],"[dispatch, sessionUser]",[782,792],[911,935],"[assetAmount, assetPrice, usdAmount]",[911,935]]